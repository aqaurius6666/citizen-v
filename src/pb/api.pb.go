// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: api.proto

package pb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Record struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminDivCode       string `protobuf:"bytes,1,opt,name=adminDivCode,proto3" json:"adminDivCode,omitempty"`
	Gender             string `protobuf:"bytes,2,opt,name=gender,proto3" json:"gender,omitempty"`
	Age                int32  `protobuf:"varint,3,opt,name=age,proto3" json:"age,omitempty"`
	EducationalLevel   string `protobuf:"bytes,4,opt,name=educationalLevel,proto3" json:"educationalLevel,omitempty"`
	CurrentPlaceCode   string `protobuf:"bytes,5,opt,name=currentPlaceCode,proto3" json:"currentPlaceCode,omitempty"`
	ResidencePlaceCode string `protobuf:"bytes,6,opt,name=residencePlaceCode,proto3" json:"residencePlaceCode,omitempty"`
	HometownCode       string `protobuf:"bytes,7,opt,name=hometownCode,proto3" json:"hometownCode,omitempty"`
	JobName            string `protobuf:"bytes,8,opt,name=jobName,proto3" json:"jobName,omitempty"`
	Religion           string `protobuf:"bytes,9,opt,name=religion,proto3" json:"religion,omitempty"`
}

func (x *Record) Reset() {
	*x = Record{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Record) ProtoMessage() {}

func (x *Record) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Record.ProtoReflect.Descriptor instead.
func (*Record) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

func (x *Record) GetAdminDivCode() string {
	if x != nil {
		return x.AdminDivCode
	}
	return ""
}

func (x *Record) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *Record) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *Record) GetEducationalLevel() string {
	if x != nil {
		return x.EducationalLevel
	}
	return ""
}

func (x *Record) GetCurrentPlaceCode() string {
	if x != nil {
		return x.CurrentPlaceCode
	}
	return ""
}

func (x *Record) GetResidencePlaceCode() string {
	if x != nil {
		return x.ResidencePlaceCode
	}
	return ""
}

func (x *Record) GetHometownCode() string {
	if x != nil {
		return x.HometownCode
	}
	return ""
}

func (x *Record) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *Record) GetReligion() string {
	if x != nil {
		return x.Religion
	}
	return ""
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Username           string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	AdminDivId         string `protobuf:"bytes,3,opt,name=adminDivId,proto3" json:"adminDivId,omitempty"`
	AdminDivName       string `protobuf:"bytes,4,opt,name=adminDivName,proto3" json:"adminDivName,omitempty"`
	RoleId             string `protobuf:"bytes,5,opt,name=roleId,proto3" json:"roleId,omitempty"`
	RoleName           string `protobuf:"bytes,6,opt,name=roleName,proto3" json:"roleName,omitempty"`
	IsActive           bool   `protobuf:"varint,7,opt,name=isActive,proto3" json:"isActive,omitempty"`
	UseDefaultPassword bool   `protobuf:"varint,8,opt,name=useDefaultPassword,proto3" json:"useDefaultPassword,omitempty"`
	AdminDivCode       string `protobuf:"bytes,9,opt,name=adminDivCode,proto3" json:"adminDivCode,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *User) GetAdminDivId() string {
	if x != nil {
		return x.AdminDivId
	}
	return ""
}

func (x *User) GetAdminDivName() string {
	if x != nil {
		return x.AdminDivName
	}
	return ""
}

func (x *User) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *User) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *User) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *User) GetUseDefaultPassword() bool {
	if x != nil {
		return x.UseDefaultPassword
	}
	return false
}

func (x *User) GetAdminDivCode() string {
	if x != nil {
		return x.AdminDivCode
	}
	return ""
}

type AdminDiv struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       string      `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name       string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	SuperiorId string      `protobuf:"bytes,3,opt,name=superiorId,proto3" json:"superiorId,omitempty"`
	Type       string      `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Id         string      `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	Subdiv     []*AdminDiv `protobuf:"bytes,6,rep,name=subdiv,proto3" json:"subdiv,omitempty"`
}

func (x *AdminDiv) Reset() {
	*x = AdminDiv{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminDiv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminDiv) ProtoMessage() {}

func (x *AdminDiv) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminDiv.ProtoReflect.Descriptor instead.
func (*AdminDiv) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2}
}

func (x *AdminDiv) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AdminDiv) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AdminDiv) GetSuperiorId() string {
	if x != nil {
		return x.SuperiorId
	}
	return ""
}

func (x *AdminDiv) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AdminDiv) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AdminDiv) GetSubdiv() []*AdminDiv {
	if x != nil {
		return x.Subdiv
	}
	return nil
}

type Campaign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Record       int32   `protobuf:"varint,1,opt,name=record,proto3" json:"record,omitempty"`
	IsDone       bool    `protobuf:"varint,2,opt,name=isDone,proto3" json:"isDone,omitempty"`
	Percent      float32 `protobuf:"fixed32,3,opt,name=percent,proto3" json:"percent,omitempty"`
	Name         string  `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Id           string  `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	StartTime    int64   `protobuf:"varint,6,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime      int64   `protobuf:"varint,7,opt,name=endTime,proto3" json:"endTime,omitempty"`
	AdminDivCode string  `protobuf:"bytes,8,opt,name=adminDivCode,proto3" json:"adminDivCode,omitempty"`
	AdminDivName string  `protobuf:"bytes,9,opt,name=adminDivName,proto3" json:"adminDivName,omitempty"`
}

func (x *Campaign) Reset() {
	*x = Campaign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Campaign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Campaign) ProtoMessage() {}

func (x *Campaign) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Campaign.ProtoReflect.Descriptor instead.
func (*Campaign) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3}
}

func (x *Campaign) GetRecord() int32 {
	if x != nil {
		return x.Record
	}
	return 0
}

func (x *Campaign) GetIsDone() bool {
	if x != nil {
		return x.IsDone
	}
	return false
}

func (x *Campaign) GetPercent() float32 {
	if x != nil {
		return x.Percent
	}
	return 0
}

func (x *Campaign) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Campaign) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Campaign) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Campaign) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *Campaign) GetAdminDivCode() string {
	if x != nil {
		return x.AdminDivCode
	}
	return ""
}

func (x *Campaign) GetAdminDivName() string {
	if x != nil {
		return x.AdminDivName
	}
	return ""
}

type Citizen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name               string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Birthday           int64  `protobuf:"varint,3,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Gender             string `protobuf:"bytes,4,opt,name=gender,proto3" json:"gender,omitempty"`
	Nationality        string `protobuf:"bytes,5,opt,name=nationality,proto3" json:"nationality,omitempty"`
	FatherName         string `protobuf:"bytes,6,opt,name=fatherName,proto3" json:"fatherName,omitempty"`
	FatherPid          string `protobuf:"bytes,7,opt,name=fatherPid,proto3" json:"fatherPid,omitempty"`
	MotherName         string `protobuf:"bytes,8,opt,name=motherName,proto3" json:"motherName,omitempty"`
	MotherPid          string `protobuf:"bytes,9,opt,name=motherPid,proto3" json:"motherPid,omitempty"`
	CurrentPlace       string `protobuf:"bytes,10,opt,name=currentPlace,proto3" json:"currentPlace,omitempty"`
	JobName            string `protobuf:"bytes,11,opt,name=jobName,proto3" json:"jobName,omitempty"`
	Pid                string `protobuf:"bytes,12,opt,name=pid,proto3" json:"pid,omitempty"`
	Hometown           string `protobuf:"bytes,13,opt,name=hometown,proto3" json:"hometown,omitempty"`
	Religion           string `protobuf:"bytes,14,opt,name=religion,proto3" json:"religion,omitempty"`
	EducationalLevel   string `protobuf:"bytes,15,opt,name=educationalLevel,proto3" json:"educationalLevel,omitempty"`
	AdminDivCode       string `protobuf:"bytes,16,opt,name=adminDivCode,proto3" json:"adminDivCode,omitempty"`
	ResidencePlace     string `protobuf:"bytes,17,opt,name=residencePlace,proto3" json:"residencePlace,omitempty"`
	AdminDivId         string `protobuf:"bytes,18,opt,name=adminDivId,proto3" json:"adminDivId,omitempty"`
	ResidencePlaceCode string `protobuf:"bytes,19,opt,name=residencePlaceCode,proto3" json:"residencePlaceCode,omitempty"`
	CurrentPlaceCode   string `protobuf:"bytes,20,opt,name=currentPlaceCode,proto3" json:"currentPlaceCode,omitempty"`
	HometownCode       string `protobuf:"bytes,21,opt,name=hometownCode,proto3" json:"hometownCode,omitempty"`
}

func (x *Citizen) Reset() {
	*x = Citizen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Citizen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Citizen) ProtoMessage() {}

func (x *Citizen) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Citizen.ProtoReflect.Descriptor instead.
func (*Citizen) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{4}
}

func (x *Citizen) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Citizen) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Citizen) GetBirthday() int64 {
	if x != nil {
		return x.Birthday
	}
	return 0
}

func (x *Citizen) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *Citizen) GetNationality() string {
	if x != nil {
		return x.Nationality
	}
	return ""
}

func (x *Citizen) GetFatherName() string {
	if x != nil {
		return x.FatherName
	}
	return ""
}

func (x *Citizen) GetFatherPid() string {
	if x != nil {
		return x.FatherPid
	}
	return ""
}

func (x *Citizen) GetMotherName() string {
	if x != nil {
		return x.MotherName
	}
	return ""
}

func (x *Citizen) GetMotherPid() string {
	if x != nil {
		return x.MotherPid
	}
	return ""
}

func (x *Citizen) GetCurrentPlace() string {
	if x != nil {
		return x.CurrentPlace
	}
	return ""
}

func (x *Citizen) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *Citizen) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *Citizen) GetHometown() string {
	if x != nil {
		return x.Hometown
	}
	return ""
}

func (x *Citizen) GetReligion() string {
	if x != nil {
		return x.Religion
	}
	return ""
}

func (x *Citizen) GetEducationalLevel() string {
	if x != nil {
		return x.EducationalLevel
	}
	return ""
}

func (x *Citizen) GetAdminDivCode() string {
	if x != nil {
		return x.AdminDivCode
	}
	return ""
}

func (x *Citizen) GetResidencePlace() string {
	if x != nil {
		return x.ResidencePlace
	}
	return ""
}

func (x *Citizen) GetAdminDivId() string {
	if x != nil {
		return x.AdminDivId
	}
	return ""
}

func (x *Citizen) GetResidencePlaceCode() string {
	if x != nil {
		return x.ResidencePlaceCode
	}
	return ""
}

func (x *Citizen) GetCurrentPlaceCode() string {
	if x != nil {
		return x.CurrentPlaceCode
	}
	return ""
}

func (x *Citizen) GetHometownCode() string {
	if x != nil {
		return x.HometownCode
	}
	return ""
}

type PostCampaignDoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XCallerId string `protobuf:"bytes,1,opt,name=_callerId,json=CallerId,proto3" json:"_callerId,omitempty"`
	Id        string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PostCampaignDoneRequest) Reset() {
	*x = PostCampaignDoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostCampaignDoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostCampaignDoneRequest) ProtoMessage() {}

func (x *PostCampaignDoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostCampaignDoneRequest.ProtoReflect.Descriptor instead.
func (*PostCampaignDoneRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{5}
}

func (x *PostCampaignDoneRequest) GetXCallerId() string {
	if x != nil {
		return x.XCallerId
	}
	return ""
}

func (x *PostCampaignDoneRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PostCampaignDoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                           `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Status  int32                          `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Data    *PostCampaignDoneResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PostCampaignDoneResponse) Reset() {
	*x = PostCampaignDoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostCampaignDoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostCampaignDoneResponse) ProtoMessage() {}

func (x *PostCampaignDoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostCampaignDoneResponse.ProtoReflect.Descriptor instead.
func (*PostCampaignDoneResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{6}
}

func (x *PostCampaignDoneResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PostCampaignDoneResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PostCampaignDoneResponse) GetData() *PostCampaignDoneResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetCampaignsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XCallerId    string `protobuf:"bytes,1,opt,name=_callerId,json=CallerId,proto3" json:"_callerId,omitempty"`
	StartTime    string `protobuf:"bytes,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime      string `protobuf:"bytes,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Limit        string `protobuf:"bytes,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset       string `protobuf:"bytes,5,opt,name=offset,proto3" json:"offset,omitempty"`
	AdminDivCode string `protobuf:"bytes,6,opt,name=adminDivCode,proto3" json:"adminDivCode,omitempty"`
}

func (x *GetCampaignsRequest) Reset() {
	*x = GetCampaignsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCampaignsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCampaignsRequest) ProtoMessage() {}

func (x *GetCampaignsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCampaignsRequest.ProtoReflect.Descriptor instead.
func (*GetCampaignsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{7}
}

func (x *GetCampaignsRequest) GetXCallerId() string {
	if x != nil {
		return x.XCallerId
	}
	return ""
}

func (x *GetCampaignsRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *GetCampaignsRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *GetCampaignsRequest) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

func (x *GetCampaignsRequest) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *GetCampaignsRequest) GetAdminDivCode() string {
	if x != nil {
		return x.AdminDivCode
	}
	return ""
}

type GetCampaignsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                       `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Status  int32                      `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Data    *GetCampaignsResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetCampaignsResponse) Reset() {
	*x = GetCampaignsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCampaignsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCampaignsResponse) ProtoMessage() {}

func (x *GetCampaignsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCampaignsResponse.ProtoReflect.Descriptor instead.
func (*GetCampaignsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{8}
}

func (x *GetCampaignsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetCampaignsResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetCampaignsResponse) GetData() *GetCampaignsResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetAdminDivNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XCallerId    string `protobuf:"bytes,1,opt,name=_callerId,json=CallerId,proto3" json:"_callerId,omitempty"`
	AdminDivId   string `protobuf:"bytes,2,opt,name=adminDivId,proto3" json:"adminDivId,omitempty"`
	AdminDivCode string `protobuf:"bytes,3,opt,name=adminDivCode,proto3" json:"adminDivCode,omitempty"`
}

func (x *GetAdminDivNameRequest) Reset() {
	*x = GetAdminDivNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdminDivNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminDivNameRequest) ProtoMessage() {}

func (x *GetAdminDivNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminDivNameRequest.ProtoReflect.Descriptor instead.
func (*GetAdminDivNameRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{9}
}

func (x *GetAdminDivNameRequest) GetXCallerId() string {
	if x != nil {
		return x.XCallerId
	}
	return ""
}

func (x *GetAdminDivNameRequest) GetAdminDivId() string {
	if x != nil {
		return x.AdminDivId
	}
	return ""
}

func (x *GetAdminDivNameRequest) GetAdminDivCode() string {
	if x != nil {
		return x.AdminDivCode
	}
	return ""
}

type GetAdminDivNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                          `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Status  int32                         `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Data    *GetAdminDivNameResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetAdminDivNameResponse) Reset() {
	*x = GetAdminDivNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdminDivNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminDivNameResponse) ProtoMessage() {}

func (x *GetAdminDivNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminDivNameResponse.ProtoReflect.Descriptor instead.
func (*GetAdminDivNameResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{10}
}

func (x *GetAdminDivNameResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetAdminDivNameResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetAdminDivNameResponse) GetData() *GetAdminDivNameResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type PostCampaignRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XCallerId string   `protobuf:"bytes,1,opt,name=_callerId,json=CallerId,proto3" json:"_callerId,omitempty"`
	StartTime int64    `protobuf:"varint,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   int64    `protobuf:"varint,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Codes     []string `protobuf:"bytes,4,rep,name=codes,proto3" json:"codes,omitempty"`
}

func (x *PostCampaignRequest) Reset() {
	*x = PostCampaignRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostCampaignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostCampaignRequest) ProtoMessage() {}

func (x *PostCampaignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostCampaignRequest.ProtoReflect.Descriptor instead.
func (*PostCampaignRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{11}
}

func (x *PostCampaignRequest) GetXCallerId() string {
	if x != nil {
		return x.XCallerId
	}
	return ""
}

func (x *PostCampaignRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *PostCampaignRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *PostCampaignRequest) GetCodes() []string {
	if x != nil {
		return x.Codes
	}
	return nil
}

type PostCampaignResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                       `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Status  int32                      `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Data    *PostCampaignResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PostCampaignResponse) Reset() {
	*x = PostCampaignResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostCampaignResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostCampaignResponse) ProtoMessage() {}

func (x *PostCampaignResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostCampaignResponse.ProtoReflect.Descriptor instead.
func (*PostCampaignResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{12}
}

func (x *PostCampaignResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PostCampaignResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PostCampaignResponse) GetData() *PostCampaignResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetStatisticsCitizensRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XCallerId     string   `protobuf:"bytes,1,opt,name=_callerId,json=CallerId,proto3" json:"_callerId,omitempty"`
	AdminDivCode  string   `protobuf:"bytes,2,opt,name=adminDivCode,proto3" json:"adminDivCode,omitempty"`
	AdminDivCodes []string `protobuf:"bytes,3,rep,name=adminDivCodes,proto3" json:"adminDivCodes,omitempty"`
}

func (x *GetStatisticsCitizensRequest) Reset() {
	*x = GetStatisticsCitizensRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatisticsCitizensRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatisticsCitizensRequest) ProtoMessage() {}

func (x *GetStatisticsCitizensRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatisticsCitizensRequest.ProtoReflect.Descriptor instead.
func (*GetStatisticsCitizensRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{13}
}

func (x *GetStatisticsCitizensRequest) GetXCallerId() string {
	if x != nil {
		return x.XCallerId
	}
	return ""
}

func (x *GetStatisticsCitizensRequest) GetAdminDivCode() string {
	if x != nil {
		return x.AdminDivCode
	}
	return ""
}

func (x *GetStatisticsCitizensRequest) GetAdminDivCodes() []string {
	if x != nil {
		return x.AdminDivCodes
	}
	return nil
}

type GetStatisticsCitizensResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                                `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Status  int32                               `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Data    *GetStatisticsCitizensResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetStatisticsCitizensResponse) Reset() {
	*x = GetStatisticsCitizensResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatisticsCitizensResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatisticsCitizensResponse) ProtoMessage() {}

func (x *GetStatisticsCitizensResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatisticsCitizensResponse.ProtoReflect.Descriptor instead.
func (*GetStatisticsCitizensResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{14}
}

func (x *GetStatisticsCitizensResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetStatisticsCitizensResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetStatisticsCitizensResponse) GetData() *GetStatisticsCitizensResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetUserOneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetUserOneRequest) Reset() {
	*x = GetUserOneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserOneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserOneRequest) ProtoMessage() {}

func (x *GetUserOneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserOneRequest.ProtoReflect.Descriptor instead.
func (*GetUserOneRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{15}
}

func (x *GetUserOneRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetUserOneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Status  int32                    `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Data    *GetUserOneResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetUserOneResponse) Reset() {
	*x = GetUserOneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserOneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserOneResponse) ProtoMessage() {}

func (x *GetUserOneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserOneResponse.ProtoReflect.Descriptor instead.
func (*GetUserOneResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{16}
}

func (x *GetUserOneResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetUserOneResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetUserOneResponse) GetData() *GetUserOneResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetAuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XCallerId string `protobuf:"bytes,1,opt,name=_callerId,json=CallerId,proto3" json:"_callerId,omitempty"`
}

func (x *GetAuthRequest) Reset() {
	*x = GetAuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthRequest) ProtoMessage() {}

func (x *GetAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthRequest.ProtoReflect.Descriptor instead.
func (*GetAuthRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{17}
}

func (x *GetAuthRequest) GetXCallerId() string {
	if x != nil {
		return x.XCallerId
	}
	return ""
}

type GetAuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                  `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Status  int32                 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Data    *GetAuthResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetAuthResponse) Reset() {
	*x = GetAuthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthResponse) ProtoMessage() {}

func (x *GetAuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthResponse.ProtoReflect.Descriptor instead.
func (*GetAuthResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{18}
}

func (x *GetAuthResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetAuthResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetAuthResponse) GetData() *GetAuthResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetOneAdminDivRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XCallerId string `protobuf:"bytes,2,opt,name=_callerId,json=CallerId,proto3" json:"_callerId,omitempty"`
}

func (x *GetOneAdminDivRequest) Reset() {
	*x = GetOneAdminDivRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneAdminDivRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneAdminDivRequest) ProtoMessage() {}

func (x *GetOneAdminDivRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneAdminDivRequest.ProtoReflect.Descriptor instead.
func (*GetOneAdminDivRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{19}
}

func (x *GetOneAdminDivRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetOneAdminDivRequest) GetXCallerId() string {
	if x != nil {
		return x.XCallerId
	}
	return ""
}

type GetOneAdminDivResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                         `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Status  int32                        `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Data    *GetOneAdminDivResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetOneAdminDivResponse) Reset() {
	*x = GetOneAdminDivResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneAdminDivResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneAdminDivResponse) ProtoMessage() {}

func (x *GetOneAdminDivResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneAdminDivResponse.ProtoReflect.Descriptor instead.
func (*GetOneAdminDivResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{20}
}

func (x *GetOneAdminDivResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetOneAdminDivResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetOneAdminDivResponse) GetData() *GetOneAdminDivResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetAdminDivOptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SuperiorId   string `protobuf:"bytes,1,opt,name=superiorId,proto3" json:"superiorId,omitempty"`
	XCallerId    string `protobuf:"bytes,2,opt,name=_callerId,json=CallerId,proto3" json:"_callerId,omitempty"`
	SuperiorCode string `protobuf:"bytes,3,opt,name=superiorCode,proto3" json:"superiorCode,omitempty"`
}

func (x *GetAdminDivOptionsRequest) Reset() {
	*x = GetAdminDivOptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdminDivOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminDivOptionsRequest) ProtoMessage() {}

func (x *GetAdminDivOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminDivOptionsRequest.ProtoReflect.Descriptor instead.
func (*GetAdminDivOptionsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{21}
}

func (x *GetAdminDivOptionsRequest) GetSuperiorId() string {
	if x != nil {
		return x.SuperiorId
	}
	return ""
}

func (x *GetAdminDivOptionsRequest) GetXCallerId() string {
	if x != nil {
		return x.XCallerId
	}
	return ""
}

func (x *GetAdminDivOptionsRequest) GetSuperiorCode() string {
	if x != nil {
		return x.SuperiorCode
	}
	return ""
}

type GetAdminDivOptionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                             `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Status  int32                            `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Data    *GetAdminDivOptionsResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetAdminDivOptionsResponse) Reset() {
	*x = GetAdminDivOptionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdminDivOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminDivOptionsResponse) ProtoMessage() {}

func (x *GetAdminDivOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminDivOptionsResponse.ProtoReflect.Descriptor instead.
func (*GetAdminDivOptionsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{22}
}

func (x *GetAdminDivOptionsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetAdminDivOptionsResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetAdminDivOptionsResponse) GetData() *GetAdminDivOptionsResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeleteCitizenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XCallerId string `protobuf:"bytes,2,opt,name=_callerId,json=CallerId,proto3" json:"_callerId,omitempty"`
}

func (x *DeleteCitizenRequest) Reset() {
	*x = DeleteCitizenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCitizenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCitizenRequest) ProtoMessage() {}

func (x *DeleteCitizenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCitizenRequest.ProtoReflect.Descriptor instead.
func (*DeleteCitizenRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{23}
}

func (x *DeleteCitizenRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteCitizenRequest) GetXCallerId() string {
	if x != nil {
		return x.XCallerId
	}
	return ""
}

type DeleteCitizenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                        `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Status  int32                       `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Data    *DeleteCitizenResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DeleteCitizenResponse) Reset() {
	*x = DeleteCitizenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCitizenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCitizenResponse) ProtoMessage() {}

func (x *DeleteCitizenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCitizenResponse.ProtoReflect.Descriptor instead.
func (*DeleteCitizenResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteCitizenResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteCitizenResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DeleteCitizenResponse) GetData() *DeleteCitizenResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type PostUserActiveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XValue    bool   `protobuf:"varint,2,opt,name=_value,json=Value,proto3" json:"_value,omitempty"`
	XCallerId string `protobuf:"bytes,3,opt,name=_callerId,json=CallerId,proto3" json:"_callerId,omitempty"`
}

func (x *PostUserActiveRequest) Reset() {
	*x = PostUserActiveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostUserActiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostUserActiveRequest) ProtoMessage() {}

func (x *PostUserActiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostUserActiveRequest.ProtoReflect.Descriptor instead.
func (*PostUserActiveRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{25}
}

func (x *PostUserActiveRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PostUserActiveRequest) GetXValue() bool {
	if x != nil {
		return x.XValue
	}
	return false
}

func (x *PostUserActiveRequest) GetXCallerId() string {
	if x != nil {
		return x.XCallerId
	}
	return ""
}

type PostUserActiveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                         `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Status  int32                        `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Data    *PostUserActiveResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PostUserActiveResponse) Reset() {
	*x = PostUserActiveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostUserActiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostUserActiveResponse) ProtoMessage() {}

func (x *PostUserActiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostUserActiveResponse.ProtoReflect.Descriptor instead.
func (*PostUserActiveResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{26}
}

func (x *PostUserActiveResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PostUserActiveResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PostUserActiveResponse) GetData() *PostUserActiveResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type PutOneAdminDivRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id        string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XCallerId string `protobuf:"bytes,3,opt,name=_callerId,json=CallerId,proto3" json:"_callerId,omitempty"`
}

func (x *PutOneAdminDivRequest) Reset() {
	*x = PutOneAdminDivRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutOneAdminDivRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutOneAdminDivRequest) ProtoMessage() {}

func (x *PutOneAdminDivRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutOneAdminDivRequest.ProtoReflect.Descriptor instead.
func (*PutOneAdminDivRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{27}
}

func (x *PutOneAdminDivRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PutOneAdminDivRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PutOneAdminDivRequest) GetXCallerId() string {
	if x != nil {
		return x.XCallerId
	}
	return ""
}

type PutOneAdminDivResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                         `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Status  int32                        `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Data    *PutOneAdminDivResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PutOneAdminDivResponse) Reset() {
	*x = PutOneAdminDivResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutOneAdminDivResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutOneAdminDivResponse) ProtoMessage() {}

func (x *PutOneAdminDivResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutOneAdminDivResponse.ProtoReflect.Descriptor instead.
func (*PutOneAdminDivResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{28}
}

func (x *PutOneAdminDivResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PutOneAdminDivResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PutOneAdminDivResponse) GetData() *PutOneAdminDivResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type PostAuthPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldPassword string `protobuf:"bytes,1,opt,name=oldPassword,proto3" json:"oldPassword,omitempty"`
	NewPassword string `protobuf:"bytes,2,opt,name=newPassword,proto3" json:"newPassword,omitempty"`
	XCallerId   string `protobuf:"bytes,3,opt,name=_callerId,json=CallerId,proto3" json:"_callerId,omitempty"`
}

func (x *PostAuthPasswordRequest) Reset() {
	*x = PostAuthPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostAuthPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostAuthPasswordRequest) ProtoMessage() {}

func (x *PostAuthPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostAuthPasswordRequest.ProtoReflect.Descriptor instead.
func (*PostAuthPasswordRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{29}
}

func (x *PostAuthPasswordRequest) GetOldPassword() string {
	if x != nil {
		return x.OldPassword
	}
	return ""
}

func (x *PostAuthPasswordRequest) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

func (x *PostAuthPasswordRequest) GetXCallerId() string {
	if x != nil {
		return x.XCallerId
	}
	return ""
}

type PostAuthPasswordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                           `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Status  int32                          `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Data    *PostAuthPasswordResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PostAuthPasswordResponse) Reset() {
	*x = PostAuthPasswordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostAuthPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostAuthPasswordResponse) ProtoMessage() {}

func (x *PostAuthPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostAuthPasswordResponse.ProtoReflect.Descriptor instead.
func (*PostAuthPasswordResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{30}
}

func (x *PostAuthPasswordResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PostAuthPasswordResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PostAuthPasswordResponse) GetData() *PostAuthPasswordResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type PostUserIssueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XCallerId    string `protobuf:"bytes,1,opt,name=_callerId,json=CallerId,proto3" json:"_callerId,omitempty"`
	AdminDivCode string `protobuf:"bytes,2,opt,name=adminDivCode,proto3" json:"adminDivCode,omitempty"`
}

func (x *PostUserIssueRequest) Reset() {
	*x = PostUserIssueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostUserIssueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostUserIssueRequest) ProtoMessage() {}

func (x *PostUserIssueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostUserIssueRequest.ProtoReflect.Descriptor instead.
func (*PostUserIssueRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{31}
}

func (x *PostUserIssueRequest) GetXCallerId() string {
	if x != nil {
		return x.XCallerId
	}
	return ""
}

func (x *PostUserIssueRequest) GetAdminDivCode() string {
	if x != nil {
		return x.AdminDivCode
	}
	return ""
}

type PostUserIssueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                        `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Status  int32                       `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Data    *PostUserIssueResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PostUserIssueResponse) Reset() {
	*x = PostUserIssueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostUserIssueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostUserIssueResponse) ProtoMessage() {}

func (x *PostUserIssueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostUserIssueResponse.ProtoReflect.Descriptor instead.
func (*PostUserIssueResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{32}
}

func (x *PostUserIssueResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PostUserIssueResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PostUserIssueResponse) GetData() *PostUserIssueResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type PutOneCitizenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name               string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Birthday           int64  `protobuf:"varint,3,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Gender             string `protobuf:"bytes,4,opt,name=gender,proto3" json:"gender,omitempty"`
	Nationality        string `protobuf:"bytes,5,opt,name=nationality,proto3" json:"nationality,omitempty"`
	FatherName         string `protobuf:"bytes,6,opt,name=fatherName,proto3" json:"fatherName,omitempty"`
	FatherPid          string `protobuf:"bytes,7,opt,name=fatherPid,proto3" json:"fatherPid,omitempty"`
	MotherName         string `protobuf:"bytes,8,opt,name=motherName,proto3" json:"motherName,omitempty"`
	MotherPid          string `protobuf:"bytes,9,opt,name=motherPid,proto3" json:"motherPid,omitempty"`
	JobName            string `protobuf:"bytes,11,opt,name=jobName,proto3" json:"jobName,omitempty"`
	Pid                string `protobuf:"bytes,12,opt,name=pid,proto3" json:"pid,omitempty"`
	XCallerId          string `protobuf:"bytes,13,opt,name=_callerId,json=CallerId,proto3" json:"_callerId,omitempty"`
	Religion           string `protobuf:"bytes,14,opt,name=religion,proto3" json:"religion,omitempty"`
	EducationalLevel   string `protobuf:"bytes,15,opt,name=educationalLevel,proto3" json:"educationalLevel,omitempty"`
	CurrentPlaceCode   string `protobuf:"bytes,16,opt,name=currentPlaceCode,proto3" json:"currentPlaceCode,omitempty"`
	ResidencePlaceCode string `protobuf:"bytes,17,opt,name=residencePlaceCode,proto3" json:"residencePlaceCode,omitempty"`
	HometownCode       string `protobuf:"bytes,18,opt,name=hometownCode,proto3" json:"hometownCode,omitempty"`
}

func (x *PutOneCitizenRequest) Reset() {
	*x = PutOneCitizenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutOneCitizenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutOneCitizenRequest) ProtoMessage() {}

func (x *PutOneCitizenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutOneCitizenRequest.ProtoReflect.Descriptor instead.
func (*PutOneCitizenRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{33}
}

func (x *PutOneCitizenRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PutOneCitizenRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PutOneCitizenRequest) GetBirthday() int64 {
	if x != nil {
		return x.Birthday
	}
	return 0
}

func (x *PutOneCitizenRequest) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *PutOneCitizenRequest) GetNationality() string {
	if x != nil {
		return x.Nationality
	}
	return ""
}

func (x *PutOneCitizenRequest) GetFatherName() string {
	if x != nil {
		return x.FatherName
	}
	return ""
}

func (x *PutOneCitizenRequest) GetFatherPid() string {
	if x != nil {
		return x.FatherPid
	}
	return ""
}

func (x *PutOneCitizenRequest) GetMotherName() string {
	if x != nil {
		return x.MotherName
	}
	return ""
}

func (x *PutOneCitizenRequest) GetMotherPid() string {
	if x != nil {
		return x.MotherPid
	}
	return ""
}

func (x *PutOneCitizenRequest) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *PutOneCitizenRequest) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *PutOneCitizenRequest) GetXCallerId() string {
	if x != nil {
		return x.XCallerId
	}
	return ""
}

func (x *PutOneCitizenRequest) GetReligion() string {
	if x != nil {
		return x.Religion
	}
	return ""
}

func (x *PutOneCitizenRequest) GetEducationalLevel() string {
	if x != nil {
		return x.EducationalLevel
	}
	return ""
}

func (x *PutOneCitizenRequest) GetCurrentPlaceCode() string {
	if x != nil {
		return x.CurrentPlaceCode
	}
	return ""
}

func (x *PutOneCitizenRequest) GetResidencePlaceCode() string {
	if x != nil {
		return x.ResidencePlaceCode
	}
	return ""
}

func (x *PutOneCitizenRequest) GetHometownCode() string {
	if x != nil {
		return x.HometownCode
	}
	return ""
}

type PutOneCitizenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                        `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Status  int32                       `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Data    *PutOneCitizenResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PutOneCitizenResponse) Reset() {
	*x = PutOneCitizenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutOneCitizenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutOneCitizenResponse) ProtoMessage() {}

func (x *PutOneCitizenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutOneCitizenResponse.ProtoReflect.Descriptor instead.
func (*PutOneCitizenResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{34}
}

func (x *PutOneCitizenResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PutOneCitizenResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PutOneCitizenResponse) GetData() *PutOneCitizenResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetOneCitizenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetOneCitizenRequest) Reset() {
	*x = GetOneCitizenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneCitizenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneCitizenRequest) ProtoMessage() {}

func (x *GetOneCitizenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneCitizenRequest.ProtoReflect.Descriptor instead.
func (*GetOneCitizenRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{35}
}

func (x *GetOneCitizenRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetOneCitizenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                        `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Status  int32                       `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Data    *GetOneCitizenResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetOneCitizenResponse) Reset() {
	*x = GetOneCitizenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneCitizenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneCitizenResponse) ProtoMessage() {}

func (x *GetOneCitizenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneCitizenResponse.ProtoReflect.Descriptor instead.
func (*GetOneCitizenResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{36}
}

func (x *GetOneCitizenResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetOneCitizenResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetOneCitizenResponse) GetData() *GetOneCitizenResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type PostCitizenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid                string `protobuf:"bytes,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Name               string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Birthday           int64  `protobuf:"varint,3,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Gender             string `protobuf:"bytes,4,opt,name=gender,proto3" json:"gender,omitempty"`
	Nationality        string `protobuf:"bytes,5,opt,name=nationality,proto3" json:"nationality,omitempty"`
	FatherName         string `protobuf:"bytes,6,opt,name=fatherName,proto3" json:"fatherName,omitempty"`
	FatherPid          string `protobuf:"bytes,7,opt,name=fatherPid,proto3" json:"fatherPid,omitempty"`
	MotherName         string `protobuf:"bytes,8,opt,name=motherName,proto3" json:"motherName,omitempty"`
	MotherPid          string `protobuf:"bytes,9,opt,name=motherPid,proto3" json:"motherPid,omitempty"`
	Religion           string `protobuf:"bytes,10,opt,name=religion,proto3" json:"religion,omitempty"`
	JobName            string `protobuf:"bytes,11,opt,name=jobName,proto3" json:"jobName,omitempty"`
	EducationalLevel   string `protobuf:"bytes,12,opt,name=educationalLevel,proto3" json:"educationalLevel,omitempty"`
	XCallerId          string `protobuf:"bytes,13,opt,name=_callerId,json=CallerId,proto3" json:"_callerId,omitempty"`
	CurrentPlaceCode   string `protobuf:"bytes,14,opt,name=currentPlaceCode,proto3" json:"currentPlaceCode,omitempty"`
	ResidencePlaceCode string `protobuf:"bytes,15,opt,name=residencePlaceCode,proto3" json:"residencePlaceCode,omitempty"`
	HometownCode       string `protobuf:"bytes,16,opt,name=hometownCode,proto3" json:"hometownCode,omitempty"`
}

func (x *PostCitizenRequest) Reset() {
	*x = PostCitizenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostCitizenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostCitizenRequest) ProtoMessage() {}

func (x *PostCitizenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostCitizenRequest.ProtoReflect.Descriptor instead.
func (*PostCitizenRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{37}
}

func (x *PostCitizenRequest) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *PostCitizenRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PostCitizenRequest) GetBirthday() int64 {
	if x != nil {
		return x.Birthday
	}
	return 0
}

func (x *PostCitizenRequest) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *PostCitizenRequest) GetNationality() string {
	if x != nil {
		return x.Nationality
	}
	return ""
}

func (x *PostCitizenRequest) GetFatherName() string {
	if x != nil {
		return x.FatherName
	}
	return ""
}

func (x *PostCitizenRequest) GetFatherPid() string {
	if x != nil {
		return x.FatherPid
	}
	return ""
}

func (x *PostCitizenRequest) GetMotherName() string {
	if x != nil {
		return x.MotherName
	}
	return ""
}

func (x *PostCitizenRequest) GetMotherPid() string {
	if x != nil {
		return x.MotherPid
	}
	return ""
}

func (x *PostCitizenRequest) GetReligion() string {
	if x != nil {
		return x.Religion
	}
	return ""
}

func (x *PostCitizenRequest) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *PostCitizenRequest) GetEducationalLevel() string {
	if x != nil {
		return x.EducationalLevel
	}
	return ""
}

func (x *PostCitizenRequest) GetXCallerId() string {
	if x != nil {
		return x.XCallerId
	}
	return ""
}

func (x *PostCitizenRequest) GetCurrentPlaceCode() string {
	if x != nil {
		return x.CurrentPlaceCode
	}
	return ""
}

func (x *PostCitizenRequest) GetResidencePlaceCode() string {
	if x != nil {
		return x.ResidencePlaceCode
	}
	return ""
}

func (x *PostCitizenRequest) GetHometownCode() string {
	if x != nil {
		return x.HometownCode
	}
	return ""
}

type PostCitizenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                      `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Status  int32                     `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Data    *PostCitizenResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PostCitizenResponse) Reset() {
	*x = PostCitizenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostCitizenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostCitizenResponse) ProtoMessage() {}

func (x *PostCitizenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostCitizenResponse.ProtoReflect.Descriptor instead.
func (*PostCitizenResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{38}
}

func (x *PostCitizenResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PostCitizenResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PostCitizenResponse) GetData() *PostCitizenResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RoleId       string `protobuf:"bytes,2,opt,name=roleId,proto3" json:"roleId,omitempty"`
	AdminDivId   string `protobuf:"bytes,3,opt,name=adminDivId,proto3" json:"adminDivId,omitempty"`
	AdminDivCode string `protobuf:"bytes,4,opt,name=adminDivCode,proto3" json:"adminDivCode,omitempty"`
	Username     string `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	Limit        string `protobuf:"bytes,6,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset       string `protobuf:"bytes,7,opt,name=offset,proto3" json:"offset,omitempty"`
	XCallerId    string `protobuf:"bytes,8,opt,name=_callerId,json=CallerId,proto3" json:"_callerId,omitempty"`
}

func (x *GetUsersRequest) Reset() {
	*x = GetUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersRequest) ProtoMessage() {}

func (x *GetUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersRequest.ProtoReflect.Descriptor instead.
func (*GetUsersRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{39}
}

func (x *GetUsersRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetUsersRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *GetUsersRequest) GetAdminDivId() string {
	if x != nil {
		return x.AdminDivId
	}
	return ""
}

func (x *GetUsersRequest) GetAdminDivCode() string {
	if x != nil {
		return x.AdminDivCode
	}
	return ""
}

func (x *GetUsersRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetUsersRequest) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

func (x *GetUsersRequest) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *GetUsersRequest) GetXCallerId() string {
	if x != nil {
		return x.XCallerId
	}
	return ""
}

type GetUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Status  int32                  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Data    *GetUsersResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetUsersResponse) Reset() {
	*x = GetUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersResponse) ProtoMessage() {}

func (x *GetUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersResponse.ProtoReflect.Descriptor instead.
func (*GetUsersResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{40}
}

func (x *GetUsersResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetUsersResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetUsersResponse) GetData() *GetUsersResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetCitizenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid           string   `protobuf:"bytes,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Name          string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Birthday      string   `protobuf:"bytes,3,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Id            string   `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	AdminDivId    string   `protobuf:"bytes,5,opt,name=adminDivId,proto3" json:"adminDivId,omitempty"`
	AdminDivCode  string   `protobuf:"bytes,6,opt,name=adminDivCode,proto3" json:"adminDivCode,omitempty"`
	Limit         string   `protobuf:"bytes,7,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        string   `protobuf:"bytes,8,opt,name=offset,proto3" json:"offset,omitempty"`
	XCallerId     string   `protobuf:"bytes,9,opt,name=_callerId,json=CallerId,proto3" json:"_callerId,omitempty"`
	AdminDivCodes []string `protobuf:"bytes,10,rep,name=adminDivCodes,proto3" json:"adminDivCodes,omitempty"`
}

func (x *GetCitizenRequest) Reset() {
	*x = GetCitizenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCitizenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCitizenRequest) ProtoMessage() {}

func (x *GetCitizenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCitizenRequest.ProtoReflect.Descriptor instead.
func (*GetCitizenRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{41}
}

func (x *GetCitizenRequest) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *GetCitizenRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetCitizenRequest) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *GetCitizenRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetCitizenRequest) GetAdminDivId() string {
	if x != nil {
		return x.AdminDivId
	}
	return ""
}

func (x *GetCitizenRequest) GetAdminDivCode() string {
	if x != nil {
		return x.AdminDivCode
	}
	return ""
}

func (x *GetCitizenRequest) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

func (x *GetCitizenRequest) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *GetCitizenRequest) GetXCallerId() string {
	if x != nil {
		return x.XCallerId
	}
	return ""
}

func (x *GetCitizenRequest) GetAdminDivCodes() []string {
	if x != nil {
		return x.AdminDivCodes
	}
	return nil
}

type GetCitizenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Status  int32                    `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Data    *GetCitizenResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetCitizenResponse) Reset() {
	*x = GetCitizenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCitizenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCitizenResponse) ProtoMessage() {}

func (x *GetCitizenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCitizenResponse.ProtoReflect.Descriptor instead.
func (*GetCitizenResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{42}
}

func (x *GetCitizenResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetCitizenResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetCitizenResponse) GetData() *GetCitizenResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetAdminDivRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	SuperiorId string `protobuf:"bytes,3,opt,name=superiorId,proto3" json:"superiorId,omitempty"`
	Type       string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Id         string `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	Limit      string `protobuf:"bytes,6,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset     string `protobuf:"bytes,7,opt,name=offset,proto3" json:"offset,omitempty"`
	XCallerId  string `protobuf:"bytes,8,opt,name=_callerId,json=CallerId,proto3" json:"_callerId,omitempty"`
}

func (x *GetAdminDivRequest) Reset() {
	*x = GetAdminDivRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdminDivRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminDivRequest) ProtoMessage() {}

func (x *GetAdminDivRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminDivRequest.ProtoReflect.Descriptor instead.
func (*GetAdminDivRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{43}
}

func (x *GetAdminDivRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetAdminDivRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetAdminDivRequest) GetSuperiorId() string {
	if x != nil {
		return x.SuperiorId
	}
	return ""
}

func (x *GetAdminDivRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetAdminDivRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetAdminDivRequest) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

func (x *GetAdminDivRequest) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *GetAdminDivRequest) GetXCallerId() string {
	if x != nil {
		return x.XCallerId
	}
	return ""
}

type GetAdminDivResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                      `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Status  int32                     `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Data    *GetAdminDivResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetAdminDivResponse) Reset() {
	*x = GetAdminDivResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdminDivResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminDivResponse) ProtoMessage() {}

func (x *GetAdminDivResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminDivResponse.ProtoReflect.Descriptor instead.
func (*GetAdminDivResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{44}
}

func (x *GetAdminDivResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetAdminDivResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetAdminDivResponse) GetData() *GetAdminDivResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type PostAdminDivRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XCallerId string `protobuf:"bytes,2,opt,name=_callerId,json=CallerId,proto3" json:"_callerId,omitempty"`
}

func (x *PostAdminDivRequest) Reset() {
	*x = PostAdminDivRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostAdminDivRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostAdminDivRequest) ProtoMessage() {}

func (x *PostAdminDivRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostAdminDivRequest.ProtoReflect.Descriptor instead.
func (*PostAdminDivRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{45}
}

func (x *PostAdminDivRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PostAdminDivRequest) GetXCallerId() string {
	if x != nil {
		return x.XCallerId
	}
	return ""
}

type PostAdminDivResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                       `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Status  int32                      `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Data    *PostAdminDivResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PostAdminDivResponse) Reset() {
	*x = PostAdminDivResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostAdminDivResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostAdminDivResponse) ProtoMessage() {}

func (x *PostAdminDivResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostAdminDivResponse.ProtoReflect.Descriptor instead.
func (*PostAdminDivResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{46}
}

func (x *PostAdminDivResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PostAdminDivResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PostAdminDivResponse) GetData() *PostAdminDivResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total  int32 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Limit  int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int32 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{47}
}

func (x *Pagination) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Pagination) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Pagination) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type PostLoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *PostLoginRequest) Reset() {
	*x = PostLoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostLoginRequest) ProtoMessage() {}

func (x *PostLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostLoginRequest.ProtoReflect.Descriptor instead.
func (*PostLoginRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{48}
}

func (x *PostLoginRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *PostLoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type PostLoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                    `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Status  int32                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Data    *PostLoginResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PostLoginResponse) Reset() {
	*x = PostLoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostLoginResponse) ProtoMessage() {}

func (x *PostLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostLoginResponse.ProtoReflect.Descriptor instead.
func (*PostLoginResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{49}
}

func (x *PostLoginResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PostLoginResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PostLoginResponse) GetData() *PostLoginResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type PostRegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *PostRegisterRequest) Reset() {
	*x = PostRegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostRegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostRegisterRequest) ProtoMessage() {}

func (x *PostRegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostRegisterRequest.ProtoReflect.Descriptor instead.
func (*PostRegisterRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{50}
}

func (x *PostRegisterRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *PostRegisterRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type PostRegisterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                       `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Status  int32                      `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Data    *PostRegisterResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PostRegisterResponse) Reset() {
	*x = PostRegisterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostRegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostRegisterResponse) ProtoMessage() {}

func (x *PostRegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostRegisterResponse.ProtoReflect.Descriptor instead.
func (*PostRegisterResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{51}
}

func (x *PostRegisterResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PostRegisterResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PostRegisterResponse) GetData() *PostRegisterResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type PostCampaignDoneResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PostCampaignDoneResponse_Data) Reset() {
	*x = PostCampaignDoneResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostCampaignDoneResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostCampaignDoneResponse_Data) ProtoMessage() {}

func (x *PostCampaignDoneResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostCampaignDoneResponse_Data.ProtoReflect.Descriptor instead.
func (*PostCampaignDoneResponse_Data) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{6, 0}
}

type GetCampaignsResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results    []*Campaign `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Pagination *Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetCampaignsResponse_Data) Reset() {
	*x = GetCampaignsResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCampaignsResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCampaignsResponse_Data) ProtoMessage() {}

func (x *GetCampaignsResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCampaignsResponse_Data.ProtoReflect.Descriptor instead.
func (*GetCampaignsResponse_Data) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{8, 0}
}

func (x *GetCampaignsResponse_Data) GetResults() []*Campaign {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *GetCampaignsResponse_Data) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetAdminDivNameResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FullName string `protobuf:"bytes,2,opt,name=fullName,proto3" json:"fullName,omitempty"`
}

func (x *GetAdminDivNameResponse_Data) Reset() {
	*x = GetAdminDivNameResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdminDivNameResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminDivNameResponse_Data) ProtoMessage() {}

func (x *GetAdminDivNameResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminDivNameResponse_Data.ProtoReflect.Descriptor instead.
func (*GetAdminDivNameResponse_Data) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{10, 0}
}

func (x *GetAdminDivNameResponse_Data) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetAdminDivNameResponse_Data) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

type PostCampaignResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Campaign []*Campaign `protobuf:"bytes,1,rep,name=campaign,proto3" json:"campaign,omitempty"`
}

func (x *PostCampaignResponse_Data) Reset() {
	*x = PostCampaignResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostCampaignResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostCampaignResponse_Data) ProtoMessage() {}

func (x *PostCampaignResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostCampaignResponse_Data.ProtoReflect.Descriptor instead.
func (*PostCampaignResponse_Data) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{12, 0}
}

func (x *PostCampaignResponse_Data) GetCampaign() []*Campaign {
	if x != nil {
		return x.Campaign
	}
	return nil
}

type GetStatisticsCitizensResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results   []*Record `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	ScopeCode string    `protobuf:"bytes,2,opt,name=scopeCode,proto3" json:"scopeCode,omitempty"`
}

func (x *GetStatisticsCitizensResponse_Data) Reset() {
	*x = GetStatisticsCitizensResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatisticsCitizensResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatisticsCitizensResponse_Data) ProtoMessage() {}

func (x *GetStatisticsCitizensResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatisticsCitizensResponse_Data.ProtoReflect.Descriptor instead.
func (*GetStatisticsCitizensResponse_Data) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{14, 0}
}

func (x *GetStatisticsCitizensResponse_Data) GetResults() []*Record {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *GetStatisticsCitizensResponse_Data) GetScopeCode() string {
	if x != nil {
		return x.ScopeCode
	}
	return ""
}

type GetUserOneResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *GetUserOneResponse_Data) Reset() {
	*x = GetUserOneResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserOneResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserOneResponse_Data) ProtoMessage() {}

func (x *GetUserOneResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserOneResponse_Data.ProtoReflect.Descriptor instead.
func (*GetUserOneResponse_Data) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{16, 0}
}

func (x *GetUserOneResponse_Data) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type GetAuthResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User     *User     `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Campaign *Campaign `protobuf:"bytes,2,opt,name=campaign,proto3" json:"campaign,omitempty"`
}

func (x *GetAuthResponse_Data) Reset() {
	*x = GetAuthResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuthResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthResponse_Data) ProtoMessage() {}

func (x *GetAuthResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthResponse_Data.ProtoReflect.Descriptor instead.
func (*GetAuthResponse_Data) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{18, 0}
}

func (x *GetAuthResponse_Data) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *GetAuthResponse_Data) GetCampaign() *Campaign {
	if x != nil {
		return x.Campaign
	}
	return nil
}

type GetOneAdminDivResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminDiv *AdminDiv `protobuf:"bytes,1,opt,name=adminDiv,proto3" json:"adminDiv,omitempty"`
}

func (x *GetOneAdminDivResponse_Data) Reset() {
	*x = GetOneAdminDivResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneAdminDivResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneAdminDivResponse_Data) ProtoMessage() {}

func (x *GetOneAdminDivResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneAdminDivResponse_Data.ProtoReflect.Descriptor instead.
func (*GetOneAdminDivResponse_Data) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{20, 0}
}

func (x *GetOneAdminDivResponse_Data) GetAdminDiv() *AdminDiv {
	if x != nil {
		return x.AdminDiv
	}
	return nil
}

type GetAdminDivOptionsResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminDiv []*AdminDiv `protobuf:"bytes,1,rep,name=adminDiv,proto3" json:"adminDiv,omitempty"`
}

func (x *GetAdminDivOptionsResponse_Data) Reset() {
	*x = GetAdminDivOptionsResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdminDivOptionsResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminDivOptionsResponse_Data) ProtoMessage() {}

func (x *GetAdminDivOptionsResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminDivOptionsResponse_Data.ProtoReflect.Descriptor instead.
func (*GetAdminDivOptionsResponse_Data) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{22, 0}
}

func (x *GetAdminDivOptionsResponse_Data) GetAdminDiv() []*AdminDiv {
	if x != nil {
		return x.AdminDiv
	}
	return nil
}

type DeleteCitizenResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCitizenResponse_Data) Reset() {
	*x = DeleteCitizenResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCitizenResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCitizenResponse_Data) ProtoMessage() {}

func (x *DeleteCitizenResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCitizenResponse_Data.ProtoReflect.Descriptor instead.
func (*DeleteCitizenResponse_Data) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{24, 0}
}

type PostUserActiveResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PostUserActiveResponse_Data) Reset() {
	*x = PostUserActiveResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostUserActiveResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostUserActiveResponse_Data) ProtoMessage() {}

func (x *PostUserActiveResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostUserActiveResponse_Data.ProtoReflect.Descriptor instead.
func (*PostUserActiveResponse_Data) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{26, 0}
}

type PutOneAdminDivResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PutOneAdminDivResponse_Data) Reset() {
	*x = PutOneAdminDivResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutOneAdminDivResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutOneAdminDivResponse_Data) ProtoMessage() {}

func (x *PutOneAdminDivResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutOneAdminDivResponse_Data.ProtoReflect.Descriptor instead.
func (*PutOneAdminDivResponse_Data) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{28, 0}
}

type PostAuthPasswordResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PostAuthPasswordResponse_Data) Reset() {
	*x = PostAuthPasswordResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostAuthPasswordResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostAuthPasswordResponse_Data) ProtoMessage() {}

func (x *PostAuthPasswordResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostAuthPasswordResponse_Data.ProtoReflect.Descriptor instead.
func (*PostAuthPasswordResponse_Data) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{30, 0}
}

type PostUserIssueResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *PostUserIssueResponse_Data) Reset() {
	*x = PostUserIssueResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostUserIssueResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostUserIssueResponse_Data) ProtoMessage() {}

func (x *PostUserIssueResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostUserIssueResponse_Data.ProtoReflect.Descriptor instead.
func (*PostUserIssueResponse_Data) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{32, 0}
}

func (x *PostUserIssueResponse_Data) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *PostUserIssueResponse_Data) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type PutOneCitizenResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PutOneCitizenResponse_Data) Reset() {
	*x = PutOneCitizenResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutOneCitizenResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutOneCitizenResponse_Data) ProtoMessage() {}

func (x *PutOneCitizenResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutOneCitizenResponse_Data.ProtoReflect.Descriptor instead.
func (*PutOneCitizenResponse_Data) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{34, 0}
}

type GetOneCitizenResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Citizen *Citizen `protobuf:"bytes,1,opt,name=citizen,proto3" json:"citizen,omitempty"`
}

func (x *GetOneCitizenResponse_Data) Reset() {
	*x = GetOneCitizenResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneCitizenResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneCitizenResponse_Data) ProtoMessage() {}

func (x *GetOneCitizenResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneCitizenResponse_Data.ProtoReflect.Descriptor instead.
func (*GetOneCitizenResponse_Data) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{36, 0}
}

func (x *GetOneCitizenResponse_Data) GetCitizen() *Citizen {
	if x != nil {
		return x.Citizen
	}
	return nil
}

type PostCitizenResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Citizen *Citizen `protobuf:"bytes,1,opt,name=citizen,proto3" json:"citizen,omitempty"`
}

func (x *PostCitizenResponse_Data) Reset() {
	*x = PostCitizenResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostCitizenResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostCitizenResponse_Data) ProtoMessage() {}

func (x *PostCitizenResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostCitizenResponse_Data.ProtoReflect.Descriptor instead.
func (*PostCitizenResponse_Data) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{38, 0}
}

func (x *PostCitizenResponse_Data) GetCitizen() *Citizen {
	if x != nil {
		return x.Citizen
	}
	return nil
}

type GetUsersResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results    []*User     `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Pagination *Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetUsersResponse_Data) Reset() {
	*x = GetUsersResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersResponse_Data) ProtoMessage() {}

func (x *GetUsersResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersResponse_Data.ProtoReflect.Descriptor instead.
func (*GetUsersResponse_Data) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{40, 0}
}

func (x *GetUsersResponse_Data) GetResults() []*User {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *GetUsersResponse_Data) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetCitizenResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results    []*Citizen  `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Pagination *Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetCitizenResponse_Data) Reset() {
	*x = GetCitizenResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCitizenResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCitizenResponse_Data) ProtoMessage() {}

func (x *GetCitizenResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCitizenResponse_Data.ProtoReflect.Descriptor instead.
func (*GetCitizenResponse_Data) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{42, 0}
}

func (x *GetCitizenResponse_Data) GetResults() []*Citizen {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *GetCitizenResponse_Data) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetAdminDivResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results    []*GetAdminDivResponse_Data_Results `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Pagination *Pagination                         `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetAdminDivResponse_Data) Reset() {
	*x = GetAdminDivResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdminDivResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminDivResponse_Data) ProtoMessage() {}

func (x *GetAdminDivResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminDivResponse_Data.ProtoReflect.Descriptor instead.
func (*GetAdminDivResponse_Data) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{44, 0}
}

func (x *GetAdminDivResponse_Data) GetResults() []*GetAdminDivResponse_Data_Results {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *GetAdminDivResponse_Data) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetAdminDivResponse_Data_Results struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminDiv *AdminDiv `protobuf:"bytes,1,opt,name=adminDiv,proto3" json:"adminDiv,omitempty"`
	Campaign *Campaign `protobuf:"bytes,2,opt,name=campaign,proto3" json:"campaign,omitempty"`
}

func (x *GetAdminDivResponse_Data_Results) Reset() {
	*x = GetAdminDivResponse_Data_Results{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdminDivResponse_Data_Results) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminDivResponse_Data_Results) ProtoMessage() {}

func (x *GetAdminDivResponse_Data_Results) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminDivResponse_Data_Results.ProtoReflect.Descriptor instead.
func (*GetAdminDivResponse_Data_Results) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{44, 0, 0}
}

func (x *GetAdminDivResponse_Data_Results) GetAdminDiv() *AdminDiv {
	if x != nil {
		return x.AdminDiv
	}
	return nil
}

func (x *GetAdminDivResponse_Data_Results) GetCampaign() *Campaign {
	if x != nil {
		return x.Campaign
	}
	return nil
}

type PostAdminDivResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Admindiv *AdminDiv `protobuf:"bytes,1,opt,name=admindiv,proto3" json:"admindiv,omitempty"`
}

func (x *PostAdminDivResponse_Data) Reset() {
	*x = PostAdminDivResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostAdminDivResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostAdminDivResponse_Data) ProtoMessage() {}

func (x *PostAdminDivResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostAdminDivResponse_Data.ProtoReflect.Descriptor instead.
func (*PostAdminDivResponse_Data) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{46, 0}
}

func (x *PostAdminDivResponse_Data) GetAdmindiv() *AdminDiv {
	if x != nil {
		return x.Admindiv
	}
	return nil
}

type PostLoginResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token              string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	UseDefaultPassword bool   `protobuf:"varint,2,opt,name=useDefaultPassword,proto3" json:"useDefaultPassword,omitempty"`
}

func (x *PostLoginResponse_Data) Reset() {
	*x = PostLoginResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostLoginResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostLoginResponse_Data) ProtoMessage() {}

func (x *PostLoginResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostLoginResponse_Data.ProtoReflect.Descriptor instead.
func (*PostLoginResponse_Data) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{49, 0}
}

func (x *PostLoginResponse_Data) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *PostLoginResponse_Data) GetUseDefaultPassword() bool {
	if x != nil {
		return x.UseDefaultPassword
	}
	return false
}

type PostRegisterResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Id       string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PostRegisterResponse_Data) Reset() {
	*x = PostRegisterResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostRegisterResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostRegisterResponse_Data) ProtoMessage() {}

func (x *PostRegisterResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostRegisterResponse_Data.ProtoReflect.Descriptor instead.
func (*PostRegisterResponse_Data) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{51, 0}
}

func (x *PostRegisterResponse_Data) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *PostRegisterResponse_Data) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *PostRegisterResponse_Data) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_api_proto protoreflect.FileDescriptor

var file_api_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x63, 0x69, 0x74,
	0x69, 0x7a, 0x65, 0x6e, 0x76, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xb8, 0x02, 0x0a, 0x06, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x10,
	0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63,
	0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x68, 0x6f, 0x6d, 0x65, 0x74, 0x6f, 0x77, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x6f, 0x6d, 0x65,
	0x74, 0x6f, 0x77, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6a, 0x6f, 0x62, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x6f, 0x6e, 0x22, 0x9a,
	0x02, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69,
	0x76, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x44, 0x69, 0x76, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x75, 0x73, 0x65, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x12, 0x75, 0x73, 0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x44, 0x69, 0x76, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xa2, 0x01, 0x0a, 0x08,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x75, 0x62, 0x64, 0x69, 0x76, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x52, 0x06, 0x73, 0x75, 0x62, 0x64, 0x69, 0x76,
	0x22, 0xf8, 0x01, 0x0a, 0x08, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x44, 0x6f, 0x6e, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x44, 0x6f, 0x6e, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x44, 0x69, 0x76, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x44, 0x69, 0x76, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x9f, 0x05, 0x0a, 0x07,
	0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62,
	0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x62,
	0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12,
	0x20, 0x0a, 0x0b, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x50, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x50, 0x69, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x6d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x50, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x50, 0x69, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x63,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70,
	0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x68, 0x6f, 0x6d, 0x65, 0x74, 0x6f, 0x77, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x68, 0x6f, 0x6d, 0x65, 0x74, 0x6f, 0x77, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x6c,
	0x69, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x6c,
	0x69, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69,
	0x76, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e,
	0x63, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72,
	0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x49, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x49, 0x64, 0x12, 0x2e, 0x0a,
	0x12, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x73, 0x69, 0x64,
	0x65, 0x6e, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a,
	0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x50, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x68, 0x6f, 0x6d,
	0x65, 0x74, 0x6f, 0x77, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x68, 0x6f, 0x6d, 0x65, 0x74, 0x6f, 0x77, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x46, 0x0a,
	0x17, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x44, 0x6f, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x5f, 0x63, 0x61, 0x6c,
	0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x61, 0x6c,
	0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x91, 0x01, 0x0a, 0x18, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x44, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x50, 0x6f,
	0x73, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x44, 0x6f, 0x6e, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x06, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0xbc, 0x01, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x44, 0x69, 0x76, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xed, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x6a, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76,
	0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x12, 0x34, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e,
	0x76, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x79, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x43,
	0x6f, 0x64, 0x65, 0x22, 0xbf, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x44, 0x69, 0x76, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x36, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x13, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x22, 0xb9, 0x01, 0x0a, 0x14, 0x50, 0x6f, 0x73,
	0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x50, 0x6f, 0x73,
	0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x36, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x08, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e,
	0x76, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x08, 0x63, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x22, 0x85, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x44,
	0x69, 0x76, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x44,
	0x69, 0x76, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x22, 0xe5, 0x01, 0x0a,
	0x1d, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x43, 0x69,
	0x74, 0x69, 0x7a, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x40, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x1a, 0x50, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x07, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x69,
	0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4f,
	0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xa9, 0x01, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x2a, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x22, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x2d, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x5f, 0x63, 0x61, 0x6c, 0x6c,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x61, 0x6c, 0x6c,
	0x65, 0x72, 0x49, 0x64, 0x22, 0xd3, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a,
	0x65, 0x6e, 0x76, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x5a,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x08, 0x63, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63,
	0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x52, 0x08, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x22, 0x44, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x4f, 0x6e, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64,
	0x22, 0xbd, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x44, 0x69, 0x76, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x69,
	0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x44, 0x69, 0x76, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x36, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x2e, 0x0a, 0x08, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x52, 0x08, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76,
	0x22, 0x7c, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x75,
	0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xc5,
	0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x3d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x44, 0x69, 0x76, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x36,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x08, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x44,
	0x69, 0x76, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a,
	0x65, 0x6e, 0x76, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x52, 0x08, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x22, 0x43, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x22, 0x8b, 0x01, 0x0a, 0x15,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x06, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x5b, 0x0a, 0x15, 0x50, 0x6f, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x5f, 0x63, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x22, 0x8d, 0x01, 0x0a, 0x16, 0x50, 0x6f, 0x73, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x50, 0x6f, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x06,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x58, 0x0a, 0x15, 0x50, 0x75, 0x74, 0x4f, 0x6e, 0x65,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x8d, 0x01, 0x0a, 0x16, 0x50, 0x75, 0x74, 0x4f, 0x6e, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x44, 0x69, 0x76, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x69,
	0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x50, 0x75, 0x74, 0x4f, 0x6e, 0x65, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x44, 0x69, 0x76, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x06, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x22, 0x7a, 0x0a, 0x17, 0x50, 0x6f, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6f,
	0x6c, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6f, 0x6c, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x22, 0x91, 0x01, 0x0a,
	0x18, 0x50, 0x6f, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3b, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x69, 0x74, 0x69,
	0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x06, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x22, 0x57, 0x0a, 0x14, 0x50, 0x6f, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x5f, 0x63, 0x61, 0x6c,
	0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x61, 0x6c,
	0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69,
	0x76, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x44, 0x69, 0x76, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xc3, 0x01, 0x0a, 0x15, 0x50, 0x6f,
	0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x50,
	0x6f, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a,
	0x3e, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22,
	0x9d, 0x04, 0x0a, 0x14, 0x50, 0x75, 0x74, 0x4f, 0x6e, 0x65, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x50, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x50, 0x69, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x50, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x50, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x5f, 0x63,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x69, 0x67,
	0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x69, 0x67,
	0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65,
	0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x2a, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x72,
	0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e,
	0x63, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x68,
	0x6f, 0x6d, 0x65, 0x74, 0x6f, 0x77, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x68, 0x6f, 0x6d, 0x65, 0x74, 0x6f, 0x77, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x8b, 0x01, 0x0a, 0x15, 0x50, 0x75, 0x74, 0x4f, 0x6e, 0x65, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x38, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x69, 0x74, 0x69,
	0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x50, 0x75, 0x74, 0x4f, 0x6e, 0x65, 0x43, 0x69, 0x74, 0x69, 0x7a,
	0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x06, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x26, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb8, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65,
	0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e,
	0x65, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x33, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e,
	0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x52, 0x07, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e,
	0x22, 0x8b, 0x04, 0x0a, 0x12, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x50, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x50, 0x69,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x50, 0x69, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x50, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6a,
	0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x6f,
	0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a,
	0x0a, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65,
	0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63,
	0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x68, 0x6f,
	0x6d, 0x65, 0x74, 0x6f, 0x77, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x68, 0x6f, 0x6d, 0x65, 0x74, 0x6f, 0x77, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xb4,
	0x01, 0x0a, 0x13, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e,
	0x76, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x1a, 0x33, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x69,
	0x7a, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x69, 0x74, 0x69,
	0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x52, 0x07, 0x63, 0x69,
	0x74, 0x69, 0x7a, 0x65, 0x6e, 0x22, 0xe4, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69,
	0x76, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x22, 0xe1, 0x01, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x66, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x28, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x9a, 0x02, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x44, 0x69, 0x76, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x44, 0x69, 0x76, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x5f, 0x63,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x44, 0x69, 0x76, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x22, 0xe8, 0x01,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x69, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e,
	0x76, 0x2e, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x12, 0x34, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e,
	0x76, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xcb, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x75, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x5f, 0x63, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x22, 0xef, 0x02, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x44, 0x69, 0x76, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0xed, 0x01, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x44, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x69,
	0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x69, 0x0a,
	0x07, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x44, 0x69, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x69, 0x74,
	0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x52, 0x08,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x12, 0x2e, 0x0a, 0x08, 0x63, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x69, 0x74,
	0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x08,
	0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x22, 0x46, 0x0a, 0x13, 0x50, 0x6f, 0x73, 0x74,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64,
	0x22, 0xb9, 0x01, 0x0a, 0x14, 0x50, 0x6f, 0x73, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69,
	0x76, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x37, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x69, 0x74, 0x69,
	0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69,
	0x76, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x1a, 0x36, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x08,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x69, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44,
	0x69, 0x76, 0x52, 0x08, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x69, 0x76, 0x22, 0x50, 0x0a, 0x0a,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x4a,
	0x0a, 0x10, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xc9, 0x01, 0x0a, 0x11, 0x50,
	0x6f, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x50, 0x6f, 0x73, 0x74,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x4c, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x75, 0x73, 0x65, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x12, 0x75, 0x73, 0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x4d, 0x0a, 0x13, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xd1, 0x01, 0x0a, 0x14, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x4e, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x32, 0xef, 0x15, 0x0a, 0x03, 0x41, 0x70,
	0x69, 0x12, 0x6c, 0x0a, 0x0c, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x12, 0x1d, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x50, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x75, 0x74, 0x68, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12,
	0x60, 0x0a, 0x09, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1a, 0x2e, 0x63,
	0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a,
	0x65, 0x6e, 0x76, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x3a, 0x01,
	0x2a, 0x12, 0x77, 0x0a, 0x0c, 0x50, 0x6f, 0x73, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69,
	0x76, 0x12, 0x1d, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x50, 0x6f, 0x73,
	0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x50, 0x6f, 0x73, 0x74,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x22, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x76, 0x65, 0x2d, 0x64, 0x69,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x71, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x12, 0x1c, 0x2e, 0x63, 0x69, 0x74, 0x69,
	0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65,
	0x6e, 0x76, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x2d, 0x64, 0x69, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x64, 0x0a,
	0x0b, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x12, 0x1c, 0x2e, 0x63,
	0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x69, 0x74, 0x69,
	0x7a, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x69, 0x74,
	0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x12, 0x22, 0x0d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x73,
	0x3a, 0x01, 0x2a, 0x12, 0x5e, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65,
	0x6e, 0x12, 0x1b, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x69, 0x74,
	0x69, 0x7a, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x0f, 0x12, 0x0d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x69, 0x74, 0x69, 0x7a,
	0x65, 0x6e, 0x73, 0x12, 0x74, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x43, 0x69, 0x74,
	0x69, 0x7a, 0x65, 0x6e, 0x12, 0x1e, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e,
	0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e,
	0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64,
	0x3d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x7d, 0x12, 0x87, 0x01, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x4f, 0x6e, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x12, 0x1f, 0x2e, 0x63,
	0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x12, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x76, 0x65, 0x2d, 0x64, 0x69, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x3d, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x7d, 0x12, 0x77, 0x0a, 0x0d, 0x50, 0x75, 0x74, 0x4f, 0x6e, 0x65, 0x43, 0x69, 0x74,
	0x69, 0x7a, 0x65, 0x6e, 0x12, 0x1e, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e,
	0x50, 0x75, 0x74, 0x4f, 0x6e, 0x65, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e,
	0x50, 0x75, 0x74, 0x4f, 0x6e, 0x65, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x1a, 0x1a, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64,
	0x3d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x8a, 0x01, 0x0a,
	0x0e, 0x50, 0x75, 0x74, 0x4f, 0x6e, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x12,
	0x1f, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x50, 0x75, 0x74, 0x4f, 0x6e,
	0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x50, 0x75, 0x74, 0x4f,
	0x6e, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x1a, 0x2a, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x76, 0x65, 0x2d,
	0x64, 0x69, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x3d, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x6d, 0x0a, 0x0d, 0x50, 0x6f, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x73, 0x73, 0x75, 0x65, 0x12, 0x1e, 0x2e, 0x63, 0x69, 0x74,
	0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x69, 0x74,
	0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x15, 0x22, 0x10, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x78, 0x0a, 0x10, 0x50, 0x6f, 0x73, 0x74,
	0x41, 0x75, 0x74, 0x68, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x21, 0x2e, 0x63,
	0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x41,
	0x75, 0x74, 0x68, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x3a,
	0x01, 0x2a, 0x12, 0x55, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x19,
	0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x69, 0x74, 0x69,
	0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x75, 0x0a, 0x0b, 0x50, 0x6f, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x12, 0x1f, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a,
	0x65, 0x6e, 0x76, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x69, 0x74, 0x69,
	0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1d, 0x22, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f,
	0x7b, 0x69, 0x64, 0x3d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x7d, 0x2f, 0x62, 0x61, 0x6e,
	0x12, 0x79, 0x0a, 0x0d, 0x50, 0x6f, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x55, 0x6e, 0x62, 0x61,
	0x6e, 0x12, 0x1f, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x50, 0x6f, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x50, 0x6f,
	0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1d, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x3d, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x7d, 0x2f, 0x75, 0x6e, 0x62, 0x61, 0x6e, 0x12, 0x74, 0x0a, 0x0d, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x12, 0x1e, 0x2e, 0x63,
	0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x69,
	0x74, 0x69, 0x7a, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63,
	0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x69,
	0x74, 0x69, 0x7a, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x2a, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x69, 0x74, 0x69,
	0x7a, 0x65, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x3d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x7d, 0x12, 0x8e, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69,
	0x76, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a,
	0x65, 0x6e, 0x76, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x44, 0x69, 0x76, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12, 0x25, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x2d, 0x64, 0x69, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x51, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x12, 0x18, 0x2e,
	0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65,
	0x6e, 0x76, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x12, 0x09, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x75, 0x74, 0x68, 0x12, 0x68, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x4f, 0x6e, 0x65, 0x12, 0x1b, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x3d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x7d, 0x12,
	0x68, 0x0a, 0x0c, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x12,
	0x1d, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x22, 0x0e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x8a, 0x01, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x43, 0x69, 0x74, 0x69, 0x7a,
	0x65, 0x6e, 0x73, 0x12, 0x26, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x43, 0x69, 0x74, 0x69,
	0x7a, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x69,
	0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x63, 0x69,
	0x74, 0x69, 0x7a, 0x65, 0x6e, 0x73, 0x12, 0x82, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x44, 0x69, 0x76, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x2e, 0x63, 0x69, 0x74,
	0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x69,
	0x76, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63,
	0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x44, 0x69, 0x76, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x12, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x76, 0x65, 0x2d, 0x64, 0x69, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x65, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x12, 0x1d, 0x2e, 0x63, 0x69,
	0x74, 0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x69, 0x74,
	0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x10, 0x12, 0x0e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x73, 0x12, 0x86, 0x01, 0x0a, 0x10, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x44, 0x6f, 0x6e, 0x65, 0x12, 0x21, 0x2e, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65,
	0x6e, 0x76, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x44,
	0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x69, 0x74,
	0x69, 0x7a, 0x65, 0x6e, 0x76, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x44, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x22, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x3d, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x7d, 0x2f, 0x64, 0x6f, 0x6e, 0x65, 0x3a, 0x01, 0x2a, 0x42, 0x06, 0x5a, 0x04, 0x2e,
	0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_rawDescOnce sync.Once
	file_api_proto_rawDescData = file_api_proto_rawDesc
)

func file_api_proto_rawDescGZIP() []byte {
	file_api_proto_rawDescOnce.Do(func() {
		file_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_rawDescData)
	})
	return file_api_proto_rawDescData
}

var file_api_proto_msgTypes = make([]protoimpl.MessageInfo, 76)
var file_api_proto_goTypes = []interface{}{
	(*Record)(nil),                             // 0: citizenv.Record
	(*User)(nil),                               // 1: citizenv.User
	(*AdminDiv)(nil),                           // 2: citizenv.AdminDiv
	(*Campaign)(nil),                           // 3: citizenv.Campaign
	(*Citizen)(nil),                            // 4: citizenv.Citizen
	(*PostCampaignDoneRequest)(nil),            // 5: citizenv.PostCampaignDoneRequest
	(*PostCampaignDoneResponse)(nil),           // 6: citizenv.PostCampaignDoneResponse
	(*GetCampaignsRequest)(nil),                // 7: citizenv.GetCampaignsRequest
	(*GetCampaignsResponse)(nil),               // 8: citizenv.GetCampaignsResponse
	(*GetAdminDivNameRequest)(nil),             // 9: citizenv.GetAdminDivNameRequest
	(*GetAdminDivNameResponse)(nil),            // 10: citizenv.GetAdminDivNameResponse
	(*PostCampaignRequest)(nil),                // 11: citizenv.PostCampaignRequest
	(*PostCampaignResponse)(nil),               // 12: citizenv.PostCampaignResponse
	(*GetStatisticsCitizensRequest)(nil),       // 13: citizenv.GetStatisticsCitizensRequest
	(*GetStatisticsCitizensResponse)(nil),      // 14: citizenv.GetStatisticsCitizensResponse
	(*GetUserOneRequest)(nil),                  // 15: citizenv.GetUserOneRequest
	(*GetUserOneResponse)(nil),                 // 16: citizenv.GetUserOneResponse
	(*GetAuthRequest)(nil),                     // 17: citizenv.GetAuthRequest
	(*GetAuthResponse)(nil),                    // 18: citizenv.GetAuthResponse
	(*GetOneAdminDivRequest)(nil),              // 19: citizenv.GetOneAdminDivRequest
	(*GetOneAdminDivResponse)(nil),             // 20: citizenv.GetOneAdminDivResponse
	(*GetAdminDivOptionsRequest)(nil),          // 21: citizenv.GetAdminDivOptionsRequest
	(*GetAdminDivOptionsResponse)(nil),         // 22: citizenv.GetAdminDivOptionsResponse
	(*DeleteCitizenRequest)(nil),               // 23: citizenv.DeleteCitizenRequest
	(*DeleteCitizenResponse)(nil),              // 24: citizenv.DeleteCitizenResponse
	(*PostUserActiveRequest)(nil),              // 25: citizenv.PostUserActiveRequest
	(*PostUserActiveResponse)(nil),             // 26: citizenv.PostUserActiveResponse
	(*PutOneAdminDivRequest)(nil),              // 27: citizenv.PutOneAdminDivRequest
	(*PutOneAdminDivResponse)(nil),             // 28: citizenv.PutOneAdminDivResponse
	(*PostAuthPasswordRequest)(nil),            // 29: citizenv.PostAuthPasswordRequest
	(*PostAuthPasswordResponse)(nil),           // 30: citizenv.PostAuthPasswordResponse
	(*PostUserIssueRequest)(nil),               // 31: citizenv.PostUserIssueRequest
	(*PostUserIssueResponse)(nil),              // 32: citizenv.PostUserIssueResponse
	(*PutOneCitizenRequest)(nil),               // 33: citizenv.PutOneCitizenRequest
	(*PutOneCitizenResponse)(nil),              // 34: citizenv.PutOneCitizenResponse
	(*GetOneCitizenRequest)(nil),               // 35: citizenv.GetOneCitizenRequest
	(*GetOneCitizenResponse)(nil),              // 36: citizenv.GetOneCitizenResponse
	(*PostCitizenRequest)(nil),                 // 37: citizenv.PostCitizenRequest
	(*PostCitizenResponse)(nil),                // 38: citizenv.PostCitizenResponse
	(*GetUsersRequest)(nil),                    // 39: citizenv.GetUsersRequest
	(*GetUsersResponse)(nil),                   // 40: citizenv.GetUsersResponse
	(*GetCitizenRequest)(nil),                  // 41: citizenv.GetCitizenRequest
	(*GetCitizenResponse)(nil),                 // 42: citizenv.GetCitizenResponse
	(*GetAdminDivRequest)(nil),                 // 43: citizenv.GetAdminDivRequest
	(*GetAdminDivResponse)(nil),                // 44: citizenv.GetAdminDivResponse
	(*PostAdminDivRequest)(nil),                // 45: citizenv.PostAdminDivRequest
	(*PostAdminDivResponse)(nil),               // 46: citizenv.PostAdminDivResponse
	(*Pagination)(nil),                         // 47: citizenv.Pagination
	(*PostLoginRequest)(nil),                   // 48: citizenv.PostLoginRequest
	(*PostLoginResponse)(nil),                  // 49: citizenv.PostLoginResponse
	(*PostRegisterRequest)(nil),                // 50: citizenv.PostRegisterRequest
	(*PostRegisterResponse)(nil),               // 51: citizenv.PostRegisterResponse
	(*PostCampaignDoneResponse_Data)(nil),      // 52: citizenv.PostCampaignDoneResponse.Data
	(*GetCampaignsResponse_Data)(nil),          // 53: citizenv.GetCampaignsResponse.Data
	(*GetAdminDivNameResponse_Data)(nil),       // 54: citizenv.GetAdminDivNameResponse.Data
	(*PostCampaignResponse_Data)(nil),          // 55: citizenv.PostCampaignResponse.Data
	(*GetStatisticsCitizensResponse_Data)(nil), // 56: citizenv.GetStatisticsCitizensResponse.Data
	(*GetUserOneResponse_Data)(nil),            // 57: citizenv.GetUserOneResponse.Data
	(*GetAuthResponse_Data)(nil),               // 58: citizenv.GetAuthResponse.Data
	(*GetOneAdminDivResponse_Data)(nil),        // 59: citizenv.GetOneAdminDivResponse.Data
	(*GetAdminDivOptionsResponse_Data)(nil),    // 60: citizenv.GetAdminDivOptionsResponse.Data
	(*DeleteCitizenResponse_Data)(nil),         // 61: citizenv.DeleteCitizenResponse.Data
	(*PostUserActiveResponse_Data)(nil),        // 62: citizenv.PostUserActiveResponse.Data
	(*PutOneAdminDivResponse_Data)(nil),        // 63: citizenv.PutOneAdminDivResponse.Data
	(*PostAuthPasswordResponse_Data)(nil),      // 64: citizenv.PostAuthPasswordResponse.Data
	(*PostUserIssueResponse_Data)(nil),         // 65: citizenv.PostUserIssueResponse.Data
	(*PutOneCitizenResponse_Data)(nil),         // 66: citizenv.PutOneCitizenResponse.Data
	(*GetOneCitizenResponse_Data)(nil),         // 67: citizenv.GetOneCitizenResponse.Data
	(*PostCitizenResponse_Data)(nil),           // 68: citizenv.PostCitizenResponse.Data
	(*GetUsersResponse_Data)(nil),              // 69: citizenv.GetUsersResponse.Data
	(*GetCitizenResponse_Data)(nil),            // 70: citizenv.GetCitizenResponse.Data
	(*GetAdminDivResponse_Data)(nil),           // 71: citizenv.GetAdminDivResponse.Data
	(*GetAdminDivResponse_Data_Results)(nil),   // 72: citizenv.GetAdminDivResponse.Data.Results
	(*PostAdminDivResponse_Data)(nil),          // 73: citizenv.PostAdminDivResponse.Data
	(*PostLoginResponse_Data)(nil),             // 74: citizenv.PostLoginResponse.Data
	(*PostRegisterResponse_Data)(nil),          // 75: citizenv.PostRegisterResponse.Data
}
var file_api_proto_depIdxs = []int32{
	2,  // 0: citizenv.AdminDiv.subdiv:type_name -> citizenv.AdminDiv
	52, // 1: citizenv.PostCampaignDoneResponse.data:type_name -> citizenv.PostCampaignDoneResponse.Data
	53, // 2: citizenv.GetCampaignsResponse.data:type_name -> citizenv.GetCampaignsResponse.Data
	54, // 3: citizenv.GetAdminDivNameResponse.data:type_name -> citizenv.GetAdminDivNameResponse.Data
	55, // 4: citizenv.PostCampaignResponse.data:type_name -> citizenv.PostCampaignResponse.Data
	56, // 5: citizenv.GetStatisticsCitizensResponse.data:type_name -> citizenv.GetStatisticsCitizensResponse.Data
	57, // 6: citizenv.GetUserOneResponse.data:type_name -> citizenv.GetUserOneResponse.Data
	58, // 7: citizenv.GetAuthResponse.data:type_name -> citizenv.GetAuthResponse.Data
	59, // 8: citizenv.GetOneAdminDivResponse.data:type_name -> citizenv.GetOneAdminDivResponse.Data
	60, // 9: citizenv.GetAdminDivOptionsResponse.data:type_name -> citizenv.GetAdminDivOptionsResponse.Data
	61, // 10: citizenv.DeleteCitizenResponse.data:type_name -> citizenv.DeleteCitizenResponse.Data
	62, // 11: citizenv.PostUserActiveResponse.data:type_name -> citizenv.PostUserActiveResponse.Data
	63, // 12: citizenv.PutOneAdminDivResponse.data:type_name -> citizenv.PutOneAdminDivResponse.Data
	64, // 13: citizenv.PostAuthPasswordResponse.data:type_name -> citizenv.PostAuthPasswordResponse.Data
	65, // 14: citizenv.PostUserIssueResponse.data:type_name -> citizenv.PostUserIssueResponse.Data
	66, // 15: citizenv.PutOneCitizenResponse.data:type_name -> citizenv.PutOneCitizenResponse.Data
	67, // 16: citizenv.GetOneCitizenResponse.data:type_name -> citizenv.GetOneCitizenResponse.Data
	68, // 17: citizenv.PostCitizenResponse.data:type_name -> citizenv.PostCitizenResponse.Data
	69, // 18: citizenv.GetUsersResponse.data:type_name -> citizenv.GetUsersResponse.Data
	70, // 19: citizenv.GetCitizenResponse.data:type_name -> citizenv.GetCitizenResponse.Data
	71, // 20: citizenv.GetAdminDivResponse.data:type_name -> citizenv.GetAdminDivResponse.Data
	73, // 21: citizenv.PostAdminDivResponse.data:type_name -> citizenv.PostAdminDivResponse.Data
	74, // 22: citizenv.PostLoginResponse.data:type_name -> citizenv.PostLoginResponse.Data
	75, // 23: citizenv.PostRegisterResponse.data:type_name -> citizenv.PostRegisterResponse.Data
	3,  // 24: citizenv.GetCampaignsResponse.Data.results:type_name -> citizenv.Campaign
	47, // 25: citizenv.GetCampaignsResponse.Data.pagination:type_name -> citizenv.Pagination
	3,  // 26: citizenv.PostCampaignResponse.Data.campaign:type_name -> citizenv.Campaign
	0,  // 27: citizenv.GetStatisticsCitizensResponse.Data.results:type_name -> citizenv.Record
	1,  // 28: citizenv.GetUserOneResponse.Data.user:type_name -> citizenv.User
	1,  // 29: citizenv.GetAuthResponse.Data.user:type_name -> citizenv.User
	3,  // 30: citizenv.GetAuthResponse.Data.campaign:type_name -> citizenv.Campaign
	2,  // 31: citizenv.GetOneAdminDivResponse.Data.adminDiv:type_name -> citizenv.AdminDiv
	2,  // 32: citizenv.GetAdminDivOptionsResponse.Data.adminDiv:type_name -> citizenv.AdminDiv
	4,  // 33: citizenv.GetOneCitizenResponse.Data.citizen:type_name -> citizenv.Citizen
	4,  // 34: citizenv.PostCitizenResponse.Data.citizen:type_name -> citizenv.Citizen
	1,  // 35: citizenv.GetUsersResponse.Data.results:type_name -> citizenv.User
	47, // 36: citizenv.GetUsersResponse.Data.pagination:type_name -> citizenv.Pagination
	4,  // 37: citizenv.GetCitizenResponse.Data.results:type_name -> citizenv.Citizen
	47, // 38: citizenv.GetCitizenResponse.Data.pagination:type_name -> citizenv.Pagination
	72, // 39: citizenv.GetAdminDivResponse.Data.results:type_name -> citizenv.GetAdminDivResponse.Data.Results
	47, // 40: citizenv.GetAdminDivResponse.Data.pagination:type_name -> citizenv.Pagination
	2,  // 41: citizenv.GetAdminDivResponse.Data.Results.adminDiv:type_name -> citizenv.AdminDiv
	3,  // 42: citizenv.GetAdminDivResponse.Data.Results.campaign:type_name -> citizenv.Campaign
	2,  // 43: citizenv.PostAdminDivResponse.Data.admindiv:type_name -> citizenv.AdminDiv
	50, // 44: citizenv.Api.PostRegister:input_type -> citizenv.PostRegisterRequest
	48, // 45: citizenv.Api.PostLogin:input_type -> citizenv.PostLoginRequest
	45, // 46: citizenv.Api.PostAdminDiv:input_type -> citizenv.PostAdminDivRequest
	43, // 47: citizenv.Api.GetAdminDiv:input_type -> citizenv.GetAdminDivRequest
	37, // 48: citizenv.Api.PostCitizen:input_type -> citizenv.PostCitizenRequest
	41, // 49: citizenv.Api.GetCitizen:input_type -> citizenv.GetCitizenRequest
	35, // 50: citizenv.Api.GetOneCitizen:input_type -> citizenv.GetOneCitizenRequest
	19, // 51: citizenv.Api.GetOneAdminDiv:input_type -> citizenv.GetOneAdminDivRequest
	33, // 52: citizenv.Api.PutOneCitizen:input_type -> citizenv.PutOneCitizenRequest
	27, // 53: citizenv.Api.PutOneAdminDiv:input_type -> citizenv.PutOneAdminDivRequest
	31, // 54: citizenv.Api.PostUserIssue:input_type -> citizenv.PostUserIssueRequest
	29, // 55: citizenv.Api.PostAuthPassword:input_type -> citizenv.PostAuthPasswordRequest
	39, // 56: citizenv.Api.GetUsers:input_type -> citizenv.GetUsersRequest
	25, // 57: citizenv.Api.PostUserBan:input_type -> citizenv.PostUserActiveRequest
	25, // 58: citizenv.Api.PostUserUnban:input_type -> citizenv.PostUserActiveRequest
	23, // 59: citizenv.Api.DeleteCitizen:input_type -> citizenv.DeleteCitizenRequest
	21, // 60: citizenv.Api.GetAdminDivOptions:input_type -> citizenv.GetAdminDivOptionsRequest
	17, // 61: citizenv.Api.GetAuth:input_type -> citizenv.GetAuthRequest
	15, // 62: citizenv.Api.GetUserOne:input_type -> citizenv.GetUserOneRequest
	11, // 63: citizenv.Api.PostCampaign:input_type -> citizenv.PostCampaignRequest
	13, // 64: citizenv.Api.GetStatisticsCitizens:input_type -> citizenv.GetStatisticsCitizensRequest
	9,  // 65: citizenv.Api.GetAdminDivName:input_type -> citizenv.GetAdminDivNameRequest
	7,  // 66: citizenv.Api.GetCampaigns:input_type -> citizenv.GetCampaignsRequest
	5,  // 67: citizenv.Api.PostCampaignDone:input_type -> citizenv.PostCampaignDoneRequest
	51, // 68: citizenv.Api.PostRegister:output_type -> citizenv.PostRegisterResponse
	49, // 69: citizenv.Api.PostLogin:output_type -> citizenv.PostLoginResponse
	46, // 70: citizenv.Api.PostAdminDiv:output_type -> citizenv.PostAdminDivResponse
	44, // 71: citizenv.Api.GetAdminDiv:output_type -> citizenv.GetAdminDivResponse
	38, // 72: citizenv.Api.PostCitizen:output_type -> citizenv.PostCitizenResponse
	42, // 73: citizenv.Api.GetCitizen:output_type -> citizenv.GetCitizenResponse
	36, // 74: citizenv.Api.GetOneCitizen:output_type -> citizenv.GetOneCitizenResponse
	20, // 75: citizenv.Api.GetOneAdminDiv:output_type -> citizenv.GetOneAdminDivResponse
	34, // 76: citizenv.Api.PutOneCitizen:output_type -> citizenv.PutOneCitizenResponse
	28, // 77: citizenv.Api.PutOneAdminDiv:output_type -> citizenv.PutOneAdminDivResponse
	32, // 78: citizenv.Api.PostUserIssue:output_type -> citizenv.PostUserIssueResponse
	30, // 79: citizenv.Api.PostAuthPassword:output_type -> citizenv.PostAuthPasswordResponse
	40, // 80: citizenv.Api.GetUsers:output_type -> citizenv.GetUsersResponse
	26, // 81: citizenv.Api.PostUserBan:output_type -> citizenv.PostUserActiveResponse
	26, // 82: citizenv.Api.PostUserUnban:output_type -> citizenv.PostUserActiveResponse
	24, // 83: citizenv.Api.DeleteCitizen:output_type -> citizenv.DeleteCitizenResponse
	22, // 84: citizenv.Api.GetAdminDivOptions:output_type -> citizenv.GetAdminDivOptionsResponse
	18, // 85: citizenv.Api.GetAuth:output_type -> citizenv.GetAuthResponse
	16, // 86: citizenv.Api.GetUserOne:output_type -> citizenv.GetUserOneResponse
	12, // 87: citizenv.Api.PostCampaign:output_type -> citizenv.PostCampaignResponse
	14, // 88: citizenv.Api.GetStatisticsCitizens:output_type -> citizenv.GetStatisticsCitizensResponse
	10, // 89: citizenv.Api.GetAdminDivName:output_type -> citizenv.GetAdminDivNameResponse
	8,  // 90: citizenv.Api.GetCampaigns:output_type -> citizenv.GetCampaignsResponse
	6,  // 91: citizenv.Api.PostCampaignDone:output_type -> citizenv.PostCampaignDoneResponse
	68, // [68:92] is the sub-list for method output_type
	44, // [44:68] is the sub-list for method input_type
	44, // [44:44] is the sub-list for extension type_name
	44, // [44:44] is the sub-list for extension extendee
	0,  // [0:44] is the sub-list for field type_name
}

func init() { file_api_proto_init() }
func file_api_proto_init() {
	if File_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Record); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminDiv); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Campaign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Citizen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostCampaignDoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostCampaignDoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCampaignsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCampaignsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdminDivNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdminDivNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostCampaignRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostCampaignResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatisticsCitizensRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatisticsCitizensResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserOneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserOneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAuthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneAdminDivRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneAdminDivResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdminDivOptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdminDivOptionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCitizenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCitizenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostUserActiveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostUserActiveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutOneAdminDivRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutOneAdminDivResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostAuthPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostAuthPasswordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostUserIssueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostUserIssueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutOneCitizenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutOneCitizenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneCitizenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneCitizenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostCitizenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostCitizenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCitizenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCitizenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdminDivRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdminDivResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostAdminDivRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostAdminDivResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostLoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostLoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostRegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostRegisterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostCampaignDoneResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCampaignsResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdminDivNameResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostCampaignResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatisticsCitizensResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserOneResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAuthResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneAdminDivResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdminDivOptionsResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCitizenResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostUserActiveResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutOneAdminDivResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostAuthPasswordResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostUserIssueResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutOneCitizenResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneCitizenResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostCitizenResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCitizenResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdminDivResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdminDivResponse_Data_Results); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostAdminDivResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostLoginResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostRegisterResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   76,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_goTypes,
		DependencyIndexes: file_api_proto_depIdxs,
		MessageInfos:      file_api_proto_msgTypes,
	}.Build()
	File_api_proto = out.File
	file_api_proto_rawDesc = nil
	file_api_proto_goTypes = nil
	file_api_proto_depIdxs = nil
}
