// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package api

import (
	"context"
	"github.com/aquarius6666/citizen-v/src/internal/db"
	"github.com/aquarius6666/citizen-v/src/internal/services/jwt"
	"github.com/gin-gonic/gin"
	"github.com/sirupsen/logrus"
)

// Injectors from api.wire.go:

func InitApiServer(ctx context.Context, logger *logrus.Logger, opts ApiServerOptions) (*ApiServer, error) {
	engine := gin.New()
	serverRepo := opts.MainRepo
	indexController := &IndexController{
		Repo: serverRepo,
	}
	loggerMiddleware := LoggerMiddleware{
		logger: logger,
	}
	secretKey := opts.Sec
	jwtJWT := jwt.NewJWT(secretKey)
	authService := &AuthService{
		Repo:       serverRepo,
		JWTService: jwtJWT,
	}
	authController := &AuthController{
		Service: authService,
	}
	authMiddleware := &AuthMiddleware{
		JWTService: jwtJWT,
	}
	adminDivService := &AdminDivService{
		Repo: serverRepo,
	}
	adminDivController := &AdminDivController{
		Service: adminDivService,
	}
	apiServer := &ApiServer{
		G:                engine,
		logger:           logger,
		serverRepo:       serverRepo,
		Index:            indexController,
		LoggerMiddleware: loggerMiddleware,
		Auth:             authController,
		AuthMiddleware:   authMiddleware,
		AdminDiv:         adminDivController,
	}
	return apiServer, nil
}

// api.wire.go:

type ApiServerOptions struct {
	MainRepo db.ServerRepo
	Sec      jwt.SecretKey
}
